[
    {
        "preview": {
            "title": "Lab\u00B2",
            "subline": "cross-reality\n team-building game\n– Thesis project –",
            "previewImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/title/lab2_square.jpg"
        },
        "metaTagOgImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/linkedin-previews/linkedin_preview_lab2.jpg",
        "heroImageSrc": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/lab2_header_SM.jpg",
        "headerContents": {
            "title": "Lab\u00B2",
            "subtitle": "A collaborative cross-reality game for virtual team building ",
            "tags": [
                "Multiplayer Serious Game",
                "Tangible interfaces",
                "Spatially-tracked virtual reality"
            ]
        },
        "projectContents": [
            {
                "componentType": "Paragraph",
                "componentProps": "Lab\u00B2 presents an experimental approach to a team building exercise specifically geared to train virtual, i.e. non-face-to-face, collaboration: <ul><li class='list'><strong> Bonding game framing: </strong> The game-based exercise engages two players in a playful, fun activity which aims to foster social bonds. The game principle of Lab\u00B2 is based on the board game The Amazing Labyrinth&reg; (Kobbert, Ravensburger, 1968) which invites players to a treasure hunt in a movable maze.</li><p><li class='list'><strong> Collaborative gameplay: </strong> The gameplay design aims at triggering as much of collaborative communication between the players as possible. However, they rely on verbal communication only and cannot see each other’s interface. For winning the game the players have to work together.</li></p><li class='list'><strong> Cross-reality interfaces: </strong> For mimicking the interdisciplinary collaboration common in virtual teams, the two players take asymmetrical roles. They use each an individual interface that provides them with a role-specific set of game controls and view of the maze. The interfaces were designed towards maximum intuitivity in order to not unnecessarily obstruct the players when playing the game. In achieving this, one interface employs real-world tangibles (a game board with movable tiles), the other immersive virtual reality (through a head-mounted display). The two interfaces are cross-linked in real time.</li></ul>"
            },
            {
                "componentType": "Paragraph",
                "componentProps": "A research poster on this project was presented at the <a href='http://radar.gsa.ac.uk/4771/'>iLRN Conference 2016, Santa Barbara.</a>"
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "Cross-reality Interfaces & System Architecture",
                    "level": 2
                }
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "Tangible game board",
                    "level": 3
                }
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "Game board – concept graphic",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/board/board_bland.jpg",
                            "alt": "Game board – concept graphic"
                        }
                    },
                    {
                        "caption": "Game board prototype (plywood, fine-art paper)",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/board/boardreal.jpg",
                            "alt": "Game board prototype (plywood, fine-art paper)"
                        }
                    }
                ]
            },
            {
                "componentType": "Paragraph",
                "componentProps": "One player uses a real game board that shows a two-dimensional maze of some fixed and some moveable pathway tiles. The player can re-arrange the maze by using one of three spare tiles."
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "Spatial VR HMD",
                    "level": 3
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The second player is equipped with an untethered head-mounted display (HMD) through which he finds himself inside the very board's 3D maze. The HMD’s position and rotation are tracked by an IR Motion Capture system.</p> <p>As the player moves within the tracking volume and/or rotates his head, the player´s view of the maze updates accordingly in real-time.</p>"
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "Head-mounted display – concept graphic",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/hmd/lab2_hmd_keyvis.jpg",
                            "alt": "Head-mounted display – concept graphic"
                        }
                    },
                    {
                        "caption": "Head-mounted display prototype",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/hmd/lab2_hmd_cardboard.jpg",
                            "alt": "Head-mounted display prototype"
                        }
                    },
                    {
                        "caption": "The VR-player can explore the maze by actual walking and head rotating.",
                        "componentType": "Video",
                        "componentProps": {
                            "url": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/video/labsquare/lab2_HMDupdate.mp4",
                            "posterImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/hmd-mov/lab2_HMDupdate_poster.jpg",
                            "autoPlay": true
                        }
                    }
                ]
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "Cross-reality linking",
                    "level": 3
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The game board and virtual maze are cross-linked in real time: On the game board, a real-time projection mapping shows the current position of the VR player and other dynamic elements in the 3D-maze. </p><p> At the same time, the game board's layout is continuously synced with that of the 3D maze: two webcams above the game board track the position and rotation of the single pathway tiles. If a line of tiles is pushed on the board, this movement is reproduced simultaneously in the virtual version of the maze.</p>"
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "The dynamic game elements are projected onto the game board.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/crosslink/lab2_crosslink1.jpg",
                            "alt": "The dynamic game elements are projected onto the game board."
                        }
                    },
                    {
                        "caption": "As the VR-player moves within the maze, his position & rotation are updated on the board in real time.",
                        "componentType": "Video",
                        "componentProps": {
                            "url": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/video/labsquare/lab2_projectionupdate.mp4",
                            "posterImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/crosslink-mov/lab2_projectionupdate_poster.jpg",
                            "autoPlay": true
                        }
                    },
                    {
                        "caption": "Tile movements on the game board are reproduced in the virtual maze.",
                        "componentType": "Video",
                        "componentProps": {
                            "url": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/video/labsquare/lab2_boardupdate.mp4",
                            "posterImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/crosslink-mov/lab2_bordupdate_poster.jpg",
                            "autoPlay": true
                        }
                    }
                ]
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "System architecture",
                    "level": 3
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "The game's system consists of seven distributed Unity units and one Vicon MoCap server that communicate through a locally hosted multiplayer game server."
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "Simplified system architecture overview",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/system-architecture/lab2_sysarch.png",
                            "alt": "Simplified system architecture overview"
                        }
                    },
                    {
                        "caption": "Basic Game Master UI",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/system-architecture/lab2_sysarch_master.jpg",
                            "alt": "Basic Game Master UI"
                        }
                    }
                ]
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "Collaborative Gameplay",
                    "level": 2
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The players take the roles of two computer scientists who have been locked up in their lab by a malicious AI they have been experimenting on. The only way to free themselves is to retrieve and run the AI's 'Emergency Shutdown Programm'. However, the programme's five code fragments are hidden inside the AI’s maze of registers.</p><p> In taking on the challenge, the computer scientists have managed to cobble together two interfaces that allow them to access the AI to recover the code. Through their individual interfaces the players take on asymmetric roles:</p> one player uses an HMD to find himself inside the AI's maze of registers (the 3D maze) where he has to search for the code fragments. The other player uses the physical game board to re-arrange the AI's hardware (the game board maze) in order to create pathways to the code fragments. He then directs the VR-player towards them. <p>While playing the game, the players cannot see each other but rely on verbal communication only. Once at a code container, the VR-player can read the necessary information (a number) on its label that the players require for unlocking and downloading the code fragment. The unlocking process involves a joint task that the players have to perform simultaneously.</p> However, the players will also need to be on the alert at all times as the AI will try to fend off the invaders. Each player has limited health resources and an uncareful action might draw on these. If one player runs out of resources, the game is lost for both. Hence, the players sink and swim together. "
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "The players take asymmetric roles in managing the game board and navigating in the maze.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/collaboration/lab2_collab1.jpg",
                            "alt": "The players take asymmetric roles in managing the game board and navigating in the maze."
                        }
                    },
                    {
                        "caption": "Collecting a code-piece requires that the players perform a joint task simultaneously.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/collaboration/lab2_collab2.jpg",
                            "alt": "Collecting a code-piece requires that the players perform a joint task simultaneously."
                        }
                    },
                    {
                        "caption": "The maze holds many perils but the players can only beat the AI together.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/labsquare/collaboration/lab2_collab3.jpg",
                            "alt": "The maze holds many perils but the players can only beat the AI together."
                        }
                    }
                ]
            }
        ],
        "specsContents": {
            "entries": [
                {
                    "title": "Platforms",
                    "contents": [
                        {
                            "text": "Desktop application (Mac / Win)"
                        },
                        {
                            "text": "Android 5.0"
                        },
                        {
                            "text": "Arduino UNO"
                        },
                        {
                            "text": "VICON Bonita infrared motion-capture system"
                        }
                    ]
                },
                {
                    "title": "Key methods",
                    "contents": [
                        {
                            "text": "P2P/multi-player networking"
                        },
                        {
                            "text": "infrared motion capture"
                        },
                        {
                            "text": "projection mapping"
                        },
                        {
                            "text": "micro-controller programming"
                        },
                        {
                            "text": "feature-based tracking"
                        }
                    ]
                },
                {
                    "title": "Software used",
                    "contents": [
                        {
                            "text": "Unity3D 5.1"
                        },
                        {
                            "text": "Exit Games Photon Multiplayer Games Server & Unity Network SDK ",
                            "link": "https://www.photonengine.com/en/PUN"
                        },
                        {
                            "text": "Vuforia for Unity extension (Qualcomm)",
                            "link": "https://www.qualcomm.com/products/vuforia"
                        },
                        {
                            "text": "Cardboard SDK for Unity (Google)",
                            "link": "https://developers.google.com/cardboard/unity/"
                        },
                        {
                            "text": "Vicon Tracker Unity Plugin (Dr. Matthieu Poyade, GSA)"
                        },
                        {
                            "text": "Arduino SDK"
                        },
                        {
                            "text": "Adobe Suite"
                        }
                    ]
                },
                {
                    "title": "References",
                    "contents": [
                        {
                            "text": "The Amazing Labyrinth® (Max Kobbert, Ravensburger)",
                            "link": "https://www.ravensburger.com/uk/games/family-games/labyrinth/index.html"
                        }
                    ]
                }
            ]
        }
    },
    {
        "preview": {
            "title": "GOMA Glasgow",
            "subline": "Heritage Visualisation",
            "previewImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/title/goma_square.jpg"
        },
        "metaTagOgImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/linkedin-previews/linkedin_preview_goma.jpg",
        "heroImageSrc": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/goma_header_GR.jpg",
        "headerContents": {
            "title": "GOMA Glasgow",
            "subtitle": "Interactive Heritage Visualisation",
            "tags": [
                "3D modelling & scanning",
                "RT3D",
                "Unity physically-based shading"
            ]
        },
        "projectContents": [
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The aim of this project was to create an interactive 3D visualisation of the front part of Glasgow’s <a href='https://en.wikipedia.org/wiki/Gallery_of_Modern_Art,_Glasgow'>Gallery of Modern Art</a> (GoMA) by using a combination of conventional 3D modelling and photogrammetry-based reproduction techniques.</p> <p> The reconstructed parts comprise the facade of the Gallery’s 1780 Royal exchange building and forefront <a href='https://en.wikipedia.org/wiki/Equestrian_statue_of_the_Duke_of_Wellington,_Glasgow'> equestrian statue of the Duke of Wellington</a>. The final models were staged in Unity3D together with low-poly models of the surrounding Glaswegian cityscape.</p><p>The model can be explored interactively with a first-person controller as demonstrated in the video below:</p>"
            },
            {
                "componentType": "Video",
                "componentProps": {
                    "url": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/video/goma/GoMA__UnityDemo.mp4",
                    "posterImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/video-poster/video-poster-goma_withArrow.jpg"
                }
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "text": "From High-Res 3D Scan to Game Art Asset",
                    "level": 2
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The reconstruction of more filigree parts – e.g. the bronze plates on the statue's socket – was realised using a photogrammetry-based 3D scanning workflow.</p><p>Photogrammety techniques allow to reproduce real-world objects from a series of photographs to create 3D models of stunning detail. However, the resulting models are often too high in resolution to be used in real-time 3D (RT3D) visualisations: a high-res photogrammetry mesh can easily exceed 1m vertices; while RT3D engines such as Unity3D v5.0 can only import meshes with a vertex count of up to 64k. Hence, for a photogrammetry mesh to be usable in Unity, the raw mesh needs to be downsampled to a fraction of its original resolution. Yet a brute-force resampling at this scale would also result in the loss of the model's valuable details.</p><p>For converting the plates and socket scans for Unity, the below workflow was developed that allowed to reduce the scans' high-res meshes to the required size while at the same time preserving as much of their rich artistic detail as possible:</p>"
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "A photogrammetric analysis of 38 photos produces a high-res point cloud of ca. 10m points (Agisoft Photoscan).",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0006_Ebene%201.jpg",
                            "alt": "A photogrammetric analysis of 38 photos produces a high-res point cloud of ca. 10m points (Agisoft Photoscan)."
                        }
                    },
                    {
                        "caption": "The resulting high-res mesh counts about 1.1m vertices.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0005_Gruppe%202.jpg",
                            "alt": "The resulting high-res mesh counts about 1.1m vertices."
                        }
                    },
                    {
                        "caption": "The texture is rendered at 4k resolution.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0004_Ebene%204.jpg",
                            "alt": "The texture is rendered at 4k resolution."
                        }
                    },
                    {
                        "caption": "A close-up view of high-res mesh and texture result (x12 zoom) reveals the model's high level of detail.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0003_Gruppe%203.jpg",
                            "alt": "A close-up view of high-res mesh and texture result (x12 zoom) reveals the model's high level of detail."
                        }
                    },
                    {
                        "caption": "The original point cloud is used to reconstruct a low-res version of the mesh of ca. 20k vertices via Poisson Surface Reconstruction (Meshlab).",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0002_Ebene%202.jpg",
                            "alt": "The original point cloud is used to reconstruct a low-res version of the mesh of ca. 20k vertices via Poisson Surface Reconstruction (Meshlab)."
                        }
                    },
                    {
                        "caption": "The details of the high-res mesh are transferred to the low-res version as a normal map (using Mudbox). The map is then filtered for noise and artifacts.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0001_Gruppe%203%20Kopie.jpg",
                            "alt": "The details of the high-res mesh are transferred to the low-res version as a normal map (using Mudbox). \nThe map is then filtered for noise and artifacts."
                        }
                    },
                    {
                        "caption": "The texture UVs of the high-res mesh are transferred to the low-res version. \nAs a finishing step, the texture undergoes some post-processing, i.e. stitching artifacts are retouched and blank spots are filled in.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/workflow/goma_workflow__0000_Ebene%203.jpg",
                            "alt": "The texture UVs of the high-res mesh are transferred to the low-res version. As a finishing step, the texture undergoes some post-processing, i.e. stitching artifacts are retouched and blank spots are filled in."
                        }
                    },
                    {
                        "caption": "The finished low-res bronze plate (20K vertices, 4K texture map, 2K normal map)",
                        "componentType": "EmbeddedMedia",
                        "componentProps": {
                            "url": "https://sketchfab.com/models/d5ba8a80db4e4c9d9925fbbab52a03c5/embed",
                            "posterImageSrc": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/embedded-media-posters/iframe-poster-sketchfab-plate.jpg"
                        }
                    }
                ]
            },
            {
                "componentType": "Paragraph",
                "componentProps": "The workflow was used to create the statue's four bronze plates, the GoMA's entrance doors and the Corinthian pillar capitals:"
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "The statue's East-facing bronze plate",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/objects/goma_plate3.jpg",
                            "alt": "Close-up of east-facing plate"
                        }
                    },
                    {
                        "caption": "The building's gold-painted entrance doors",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/objects/goma_doors.jpg",
                            "alt": "The gold-painted entrance doors"
                        }
                    },
                    {
                        "caption": "The columns' Corinthian captials",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/goma/objects/goma_pillarcapital.jpg",
                            "alt": "The columns' Corinthian captials"
                        }
                    }
                ]
            }
        ],
        "specsContents": {
            "entries": [
                {
                    "title": "Platform",
                    "contents": [
                        {
                            "text": "standalone application (Win / Mac)"
                        }
                    ]
                },
                {
                    "title": "Key methods",
                    "contents": [
                        {
                            "text": "photogrammetry"
                        },
                        {
                            "text": "mesh resolution reduction with detail transfer"
                        },
                        {
                            "text": "physically-based shading "
                        }
                    ]
                },
                {
                    "title": "Software used",
                    "contents": [
                        {
                            "text": "Unity3D 5.0"
                        },
                        {
                            "text": "Agisoft Photoscan"
                        },
                        {
                            "text": "3Ds Max"
                        },
                        {
                            "text": "Mudbox"
                        },
                        {
                            "text": "Meshlab"
                        },
                        {
                            "text": "Quixel Suite"
                        },
                        {
                            "text": "Adobe Suite"
                        }
                    ]
                },
                {
                    "title": "References",
                    "contents": [
                        {
                            "text": "Glasgow Google Maps models (Stephen Dunlop)",
                            "link": "https://3dwarehouse.sketchup.com/user.html?id=1375918354338648496230605"
                        },
                        {
                            "text": "'Warmblood Horse & Rider' 3D model (Autodesk)",
                            "link": "http://www.123dapp.com/123C-3D-Model/Warmblood-Horse--Rider--Neutral-Pose/817063"
                        }
                    ]
                }
            ]
        }
    },
    {
        "preview": {
            "title": "Spartathlon",
            "subline": "Health serious game",
            "previewImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/title/spartathlon_square.jpg"
        },
        "metaTagOgImageUrl": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/linkedin-previews/linkedin_preview_spartathlon.jpg",
        "heroImageSrc": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/sparta_header_SM.jpg",
        "headerContents": {
            "title": "Spartathlon",
            "subtitle": "A step-by-step adventure",
            "tags": [
                "Health serious game",
                "Unity 2D",
                "IOT",
                "Unity Native Android plugin"
            ]
        },
        "projectContents": [
            {
                "componentType": "Paragraph",
                "componentProps": "<p>Spartathlon is a serious game that aims to motivate users of fitness trackers to reach their daily step goal. Get engaged in an adventure in which you can only progress as much as you have walked during the day. Reaching your daily step goal gets you to the game's next story point – and to the next challenge!</p><p>In the game, you follow in the footsteps of legendary Athenian messenger Pheidippides (490 B.C.) who is sent to Sparta to ask for the help of the Spartan army against the threatening Persian invasion.</p> <p>The problem: Pheidippides actually cannot remember directions very well. Hence, for getting to Sparta, he will need to ask the locals he meets on the way for help. However, not everyone who offers to help Pheidippides is trustworthy or will do so without requesting a favour in return.</p>"
            },
            {
                "componentType": "Image",
                "componentProps": {
                    "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/spart_keyvis.jpg",
                    "alt": "key visual with map screen and Fitbit pedometer"
                }
            },
            {
                "componentType": "Headline",
                "componentProps": {
                    "test": "Prototype Development",
                    "level": 2
                }
            },
            {
                "componentType": "Paragraph",
                "componentProps": "<p>The game prototype of Spartathlon was developed using Unity 4.6 for Android 5.0 and Fitbit fitness trackers. The game uses a native Android plugin for handling the required user-data requests to the Fitbit API.</p><p>The prototype features two example levels, the first of which is demonstrated in the slideshow:</p>"
            },
            {
                "componentType": "Slideshow",
                "componentProps": [
                    {
                        "caption": "Start a new game or resume where you left off last time.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_1.jpg",
                            "alt": "Start a new game or resume where you left off last time."
                        }
                    },
                    {
                        "caption": "Log in to your Fitbit account and grant data access permission ",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_fitbit.jpg",
                            "alt": "Log in to your Fitbit account and grant data access permission "
                        }
                    },
                    {
                        "caption": "Your journey starts at Athens. Your first destination is one day's footmarch away (equalling your daily step goal).",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_2.jpg",
                            "alt": "Your journey starts at Athens. Your first destination is one day's footmarch away (which equals your daily step goal)."
                        }
                    },
                    {
                        "caption": "For finding out about the next bit of the way, Pheidippides will need to ask some locals.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_4.jpg",
                            "alt": "For finding out about the next bit of the way, Pheidippides will need to ask some locals."
                        }
                    },
                    {
                        "caption": "In Skaramagas, an old fisherman offers Pheidippides to take him along in his boat – if he helps him fishing.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_5.jpg",
                            "alt": "In Skaramagas, an old fisherman offers Pheidippides to take him along in his boat – if he helps him fishing."
                        }
                    },
                    {
                        "caption": "However, the fisherman will first want to test your fishing skills:",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_6.jpg",
                            "alt": "However, the fisherman will first want to test your fishing skills:"
                        }
                    },
                    {
                        "caption": "He asks you to get him three golden fishes – you are given five attempts.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_7.jpg",
                            "alt": "He asks you to get him three golden fishes – you are given five attempts."
                        }
                    },
                    {
                        "caption": "If you did well, the fisherman will take you across the bay to Elefsina. Otherwise, you'll need to walk double the distance!",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_8.jpg",
                            "alt": "If you did well, the fisherman will take you across the bay to Elefsina. Otherwise, you'll need to walk double the distance!"
                        }
                    },
                    {
                        "caption": "Use the menu to sync your freshly walked steps from your fitness tracker or to customise your daily step goal.",
                        "componentType": "Image",
                        "componentProps": {
                            "src": "https://masters-portfolio-assets.s3.eu-central-1.amazonaws.com/images/spartathlon/app-demo/spart_3.jpg",
                            "alt": "Use the menu to sync your freshly walked steps from your fitness tracker or to customise your daily step goal."
                        }
                    }
                ]
            }
        ],
        "specsContents": {
            "entries": [
                {
                    "title": "Platform",
                    "contents": [
                        {
                            "text": "Android 5.0 & Fitbit One"
                        }
                    ]
                },
                {
                    "title": "Key methods",
                    "contents": [
                        {
                            "text": "development of custom Fitbit REST API client as a native Android plugin for Unity3D"
                        },
                        {
                            "text": "2D sprite animation with inverse kinematics "
                        }
                    ]
                },
                {
                    "title": "Software used",
                    "contents": [
                        {
                            "text": "Unity3D 4.6"
                        },
                        {
                            "text": "Android Studio"
                        },
                        {
                            "text": "Adobe Suite"
                        }
                    ]
                },
                {
                    "title": "References",
                    "contents": [
                        {
                            "text": "Sprite & Bones sprite kinematics lib (Earnest Banbury)",
                            "link": "https://github.com/Banbury/UnitySpritesAndBones"
                        },
                        {
                            "text": "OAuth 1.0 Scribe library (Pablo Fernandez)",
                            "link": "https://github.com/scribejava/scribejava"
                        }
                    ]
                }
            ]
        }
    }
]